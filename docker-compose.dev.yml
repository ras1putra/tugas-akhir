version: '3.8'

services:
  frontend-main:
    build:
      context: ./frontend-tugas-akhir
      target: dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend-tugas-akhir:/app:delegated
      - /app/node_modules
    env_file:
      - ./frontend-tugas-akhir/.env
    depends_on:
      - backend-main
    restart: unless-stopped

  frontend-admin:
    build:
      context: ./admin-tugas-akhir
      target: dev
    ports:
      - "3001:3000"
    volumes:
      - ./admin-tugas-akhir:/app:rw
      - /app/node_modules
    env_file:
      - ./admin-tugas-akhir/.env
    depends_on:
      - backend-main
    restart: unless-stopped

  backend-main:
    build:
      context: ./backend-tugas-akhir
      target: dev
    ports:
      - "4000:4000"
    volumes:
      - ./backend-tugas-akhir:/app:delegated
      - /app/node_modules
    env_file:
      - ./backend-tugas-akhir/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  backend-worker:
    build:
      context: ./backend-2-tugas-akhir
      target: dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend-2-tugas-akhir:/app:delegated
      - /app/.venv
    env_file:
      - ./backend-2-tugas-akhir/.env
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "127.0.0.1:54321:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  celery:
    build:
      context: ./backend-2-tugas-akhir
      target: dev
    command: uv run celery -A src.worker worker --loglevel=info
    volumes:
      - ./backend-2-tugas-akhir:/app
      - /app/.venv
    env_file:
      - ./backend-2-tugas-akhir/.env
    depends_on:
      - redis
      - backend-worker
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend-main
      - frontend-admin
      - backend-main
      - backend-worker
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
